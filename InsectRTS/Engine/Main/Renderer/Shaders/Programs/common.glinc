#ifndef COMMON_INCLUDE
#define COMMON_INCLUDE

/*
 * The number of lights that may be used when rendering.
 */
#ifndef LIGHT_COUNT
#define LIGHT_COUNT 3
#endif

/*
 * block that stores camera information.
 */
uniform CameraData
{
    mat4 view;
    mat4 viewInv;
    mat4 proj;
    mat4 viewProj;
    vec3 position;
} cam;

/*
* block that stores global lighting information.
*/
layout(std140) uniform LightData
{
    vec3 ambient;
    vec3 direction[LIGHT_COUNT];
    vec3 diffColor[LIGHT_COUNT];
    vec3 specColor[LIGHT_COUNT];
} light;

/*
 * uniforms that may be used.
 */
uniform mat4 u_modelMatrix;
uniform vec4 u_color;

/*
 * vertex data that may be used.
 */
in vec3 v_position;
in vec3 v_normal;
in vec4 v_color;

vec4 LocalToClipPos(in vec3 localPosition)
{
    return cam.viewProj * u_modelMatrix * vec4(localPosition, 1.0);
}

vec3 LocalToWorldPos(in vec3 localPosition)
{
    return (u_modelMatrix * vec4(localPosition, 1.0)).xyz;
}

vec3 NormalToWorld(in vec3 normal)
{
    return (u_modelMatrix * vec4(normal, 0.0)).xyz;
}

#endif
